import genanki
import random

def generate_id():
    return random.randrange(1 << 30, 1 << 31)

def get_model(model_id, model_name, fields_list, templates_list, css):
    """
    :param id             model id generated by generate_id
    :param fields_list    list of fields
    :param templates_list list of templates
    :param css            css
    """
    fields = []
    for field in fields_list:
        fields.append({"name": field})
    templates = [{ 
        "name": templates_list[0],
        "qfmt": templates_list[1],
        "afmt": templates_list[2]
        }]
    return genanki.Model(model_id, model_name,fields,templates,css)

    
class Ankideck(genanki.Deck):

    """ankideck"""
    def __init__(self, deck_name, model_name, model_fields, model_templates, model_css=' '):
        self.model_fields, self.model_templates, self.model_css = model_fields,model_templates,model_css
        self.model_id = generate_id()
        self.deck_id = generate_id()
        self.Model = get_model(self.model_id, model_name, model_fields, model_templates, model_css)
        super(Ankideck, self).__init__(deck_id=self.deck_id, name=deck_name)
        
    def addNote(self,fields, sort_field=0):
        guid = genanki.guid_for(fields[0])
        self.add_note(genanki.Note(model=self.Model, fields=fields, guid=guid, sort_field=sort_field))
